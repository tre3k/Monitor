/*----- PROTECTED REGION ID(MonitorStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        MonitorStateMachine.cpp
//
// description : State machine file for the Monitor class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
// Kirill Pshenichnyi (c) 2019
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <Monitor.h>

/*----- PROTECTED REGION END -----*/	//	Monitor::MonitorStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace Monitor_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Monitor::is_Count_allowed()
 *	Description : Execution allowed for Count attribute
 */
//--------------------------------------------------------
bool Monitor::is_Count_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Count attribute in read access.
	/*----- PROTECTED REGION ID(Monitor::CountStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	Monitor::CountStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================


/*----- PROTECTED REGION ID(Monitor::MonitorStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	Monitor::MonitorStateAllowed.AdditionalMethods

}	//	End of namespace
